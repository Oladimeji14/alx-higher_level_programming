#include "lists.h"

/**
 * check_cycle - checks if a singly linked list has a cycle
 * @list: pointer to the head of the linked list
 * Return: 1 if there is a cycle, 0 otherwise
 */
int check_cycle(listint_t *list)
{
    listint_t *hare = list;
listint_t *hare = list;

    while (tortoise && hare && hare->next) {
        tortoise = tortoise->next;      // Move one step
hare = hare->next->next;       // Move two steps

if (tortoise == hare)           // If there is a cycle, they will meet
            return 1;
}

    return 0;                           // If there is no cycle
}
